{"author":"DigixGlobal","title":"Contract Resolver Interface","fileName":"contracts/ResolverClient.sol","name":"ResolverClient","abi":[{"constant":true,"inputs":[],"name":"resolver","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"isLocked","outputs":[{"name":"_locked","type":"bool"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"CONTRACT_ADDRESS","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"_key","type":"bytes32"}],"name":"getContract","outputs":[{"name":"_contract","type":"address"}],"payable":false,"type":"function"}],"bin":"606060405234610000575b610341806100196000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806304f3bcec1461005f578063a4e2d634146100ae578063db4ecbc1146100d5578063e16c7d9814610124575b610000565b346100005761006c610185565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34610000576100bb6101ab565b604051808215151515815260200191505060405180910390f35b34610000576100e2610255565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3461000057610143600480803560001916906020019091905050610259565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cf3090126000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401809050602060405180830381600087803b156100005760325a03f115610000575050506040518051905090508090505b90565b3081565b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e16c7d98836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b156100005760325a03f115610000575050506040518051905090508090505b9190505600a165627a7a72305820d2e5268187a6f86b1bd675b56fde73045fab0081ee77222fd696ff64cbc677990029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x0 JUMPI JUMPDEST PUSH2 0x341 DUP1 PUSH2 0x19 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4F3BCEC EQ PUSH2 0x5F JUMPI DUP1 PUSH4 0xA4E2D634 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0xDB4ECBC1 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0xE16C7D98 EQ PUSH2 0x124 JUMPI JUMPDEST PUSH2 0x0 JUMP JUMPDEST CALLVALUE PUSH2 0x0 JUMPI PUSH2 0x6C PUSH2 0x185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x0 JUMPI PUSH2 0xBB PUSH2 0x1AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x0 JUMPI PUSH2 0xE2 PUSH2 0x255 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x0 JUMPI PUSH2 0x143 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCF309012 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 SWAP1 POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO PUSH2 0x0 JUMPI PUSH1 0x32 GAS SUB CALL ISZERO PUSH2 0x0 JUMPI POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP DUP1 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST ADDRESS DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE16C7D98 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO PUSH2 0x0 JUMPI PUSH1 0x32 GAS SUB CALL ISZERO PUSH2 0x0 JUMPI POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP DUP1 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP STOP LOG1 PUSH6 0x627A7A723058 SHA3 0xd2 0xe5 0x26 DUP2 DUP8 0xa6 0xf8 PUSH12 0x1BD675B56FDE73045FAB0081 0xee PUSH24 0x222FD696FF64CBC677990029000000000000000000000000 ","source":"pragma solidity ^0.4.6;\n\nimport \"./ContractResolver.sol\";\n\n/// @title Contract Resolver Interface\n/// @author DigixGlobal\n\ncontract ResolverClient {\n\n  /// The address of the resolver contract for this project\n  address public resolver;\n\n  /// Make our own address available to us as a constant\n  address public constant CONTRACT_ADDRESS = address(this);\n\n  /// Function modifier to check if msg.sender corresponds to the resolved address of a given key\n  /// @param _contract The resolver key\n  modifier ifSenderIs(bytes32 _contract) {\n    if (msg.sender != ContractResolver(resolver).getContract(_contract)) {\n      throw;\n    } else {\n      _;\n    }\n  }\n\n  /// Function modifier to check resolver's locking status.\n  modifier unlessResolverIsLocked() {\n    if (isLocked()) {\n      throw;\n    } else {\n      _;\n    }\n  }\n\n  /// @dev Initialize new contract\n  /// @param _key the resolver key for this contract\n  /// @return _success if the initialization is successful\n  function init(bytes32 _key) internal returns (bool _success) {\n    _success = ContractResolver(resolver).initRegisterContract(_key, CONTRACT_ADDRESS);\n    return _success;\n  }\n\n  /// @dev Check if resolver is locked\n  /// @return _locked if the resolver is currently locked\n  function isLocked() public constant returns (bool _locked) {\n    _locked = ContractResolver(resolver).locked();\n    return _locked;\n  }\n\n  /// @dev Get the address of a contract\n  /// @param _key the resolver key to look up\n  /// @return _contract the address of the contract\n  function getContract(bytes32 _key) public constant returns (address _contract) {\n    _contract = ContractResolver(resolver).getContract(_key);\n    return _contract;\n  }\n}\n","abiDocs":[{"constant":true,"inputs":[],"name":"resolver","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function","signature":"resolver()","signatureHash":"04f3bcec"},{"constant":true,"inputs":[],"name":"isLocked","outputs":[{"name":"_locked","type":"bool"}],"payable":false,"type":"function","details":"Check if resolver is locked","return":"_locked if the resolver is currently locked","signature":"isLocked()","signatureHash":"a4e2d634"},{"constant":true,"inputs":[],"name":"CONTRACT_ADDRESS","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function","signature":"CONTRACT_ADDRESS()","signatureHash":"db4ecbc1"},{"constant":true,"inputs":[{"name":"_key","type":"bytes32","description":"the resolver key to look up"}],"name":"getContract","outputs":[{"name":"_contract","type":"address"}],"payable":false,"type":"function","details":"Get the address of a contract","return":"_contract the address of the contract","signature":"getContract(bytes32)","signatureHash":"e16c7d98"}]}
